#!/bin/bash

## Copyright (C) 2012 - 2023 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

tbbversion() {
   command -v /usr/libexec/msgcollector/striphtml >/dev/null
   command -v jq >/dev/null
   command -v xargs >/dev/null
   command -v printf >/dev/null

   ## fallback
   tbb_version="UNKNOWN"
   tbb_recommended_versions_error=""

   ## Example see /usr/share/tb-updater/unit-test/RecommendedTBBVersions

   if [ ! -f "$RecommendedTBBVersions" ]; then
      local MSG="$SCRIPTNAME tbbversion: RecommendedTBBVersions: $RecommendedTBBVersions does not exist."
      echo "$MSG"
      error "$MSG"
      return 1
   fi

   if tbb_version="$(jq -r .version "$RecommendedTBBVersions")" ; then
      true "INFO: jq exit code ok."
   else
      tbb_version="UNKNOWN"
      tbb_recommended_versions_error="Rejected invalid RecommendedTBBVersions versions file. \
(jq failed.)"
      return 0
   fi

   if [ "$tbb_version" = "" ] ; then
      tbb_version="UNKNOWN"
      tbb_recommended_versions_error="Rejected invalid RecommendedTBBVersions versions file. \
(jq output empty.)"
      return 0
   else
      true "INFO: jq not empty, ok."
   fi

   ## A single version string should not be longer than 20 characters. If
   ## it is, there is probably something wrong.
   local max_string_length
   max_string_length="20"

   local actual_string_length
   actual_string_length="${#tbb_version}"
   tbbversion_excess_length=""

   ## Check if the string length of tbb_version is excessive.
   if [ "$actual_string_length" -gt "$max_string_length" ]; then
      ## Store excess length for later use.
      tbbversion_excess_length="$tbb_version"

      ## Shorten excess length $tbb_version to $max_string_length chars.
      #tbb_version="${tbb_version:0:$max_string_length}"

      tbb_version="UNKNOWN"
      tbb_recommended_versions_error="Rejected invalid RecommendedTBBVersions versions file. \
(Excessive version string length of $actual_string_length characters.)"
      return 0
   fi

   ## Thanks to:
   ## https://stackoverflow.com/questions/369758/how-to-trim-whitespace-from-bash-variable/3352015#3352015
   ## for the leading/trailing whitespace removal code

   local temp

   temp="$tbb_version"
   temp="${temp#"${temp%%[![:space:]]*}"}" ## remove leading whitespace characters
   temp="${temp%"${temp##*[![:space:]]}"}" ## remove trailing whitespace characters
   tbb_version="$temp"

   tbb_version="$(/usr/libexec/msgcollector/striphtml "$tbb_version")"
}

tbbversion_installed() {
   ## Getting currently installed version number

   ## Fallbacks.
   tbb_locally_installed_version="UNKNOWN. Please report this tb-updater Bug!"
   tbb_locally_installed_version_detect_success="0"

   if [ ! -d "$tbb_folder" ]; then
      tbb_locally_installed_version="None installed. (Folder <code>$tbb_folder</code> does not exist.)"
      return 0
   fi

   if [ ! -f "$tb_local_version_file" ]; then
      tbb_locally_installed_version="Version file not found. (File <code>$tb_local_version_file</code> does not exist.) Please report this tb-updater Bug!"
      return 0
   fi

   local tb_local_version_contents temp
   tb_local_version_contents="$(cat "$tb_local_version_file")" || \
      { tbb_locally_installed_version="Reading version file <code>$tb_local_version_file</code> failed. Please report this tb-updater Bug!" ; return 0; };

   temp="$(echo "$tb_local_version_contents" | jq ".version")" || \
      { tbb_locally_installed_version="Parsing version file (part 1) <code>$tb_local_version_file</code> failed. Please report this tb-updater Bug!" ; return 0; };

   temp="$(echo "$temp" | xargs printf)" || \
      { tbb_locally_installed_version="Parsing version file (part 2) <code>$tb_local_version_file</code> failed. Please report this tb-updater Bug!" ; return 0; };

   tbb_locally_installed_version="$temp"
   tbb_locally_installed_version_detect_success="1"
}
